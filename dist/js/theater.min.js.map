{"version":3,"sources":["../../js/theater.js"],"names":["$","KEY_ESC","KEY_LEFT","KEY_RIGHT","Theater","element","options","_classCallCheck","this","keyCodes","esc","left","right","$element","$body","$overlay","$container","src","attr","defaults","loop","keyboard","arrows","template","renderMedia","slideshow","closeOnClick","overlay","_createClass","key","value","assignOptions","bindEvents","newOptions","extend","on","show","bind","handleKeyboard","e","which","close","_this","preventDefault","append","html","setTimeout","addClass","_this2","removeClass","remove","fn","theater","each","init","jQuery"],"mappings":"oZAOA,SAAEA,GAEA,IAAMC,EAAY,GACZC,EAAY,GACZC,EAAY,GAGZC,EAPA,WASJ,SAAAA,EAAYC,EAASC,GAASC,gBAAAC,KAAAJ,GAE5BI,KAAKC,UACHC,IAAKT,EACLU,KAAMT,EACNU,MAAOT,GAGTK,KAAKK,SAAWb,EAAEK,GAClBG,KAAKF,QAAUA,EAEfE,KAAKM,MAAQd,EAAE,QACfQ,KAAKO,SAAWf,EAAE,uCAClBQ,KAAKQ,WAAahB,EAAE,yCAEpBQ,KAAKS,IAAMjB,EAAEQ,KAAKK,SAAS,IAAIK,KAAK,QAEpCV,KAAKW,UACHC,MAAM,EACNC,UAAU,EACVC,QAAQ,EACRC,YACGf,KAAKgB,gBACRC,WAAW,EACXC,cAAc,EACdC,SAAS,GAlCT,OAAAC,aAAAxB,IAAAyB,IAAA,OAAAC,MAAA,WAyCFtB,KAAKF,QAAUE,KAAKuB,cAAcvB,KAAKF,SACvCE,KAAKwB,gBA1CHH,IAAA,gBAAAC,MAAA,SA8CUG,GAEZ,OAAOjC,EAAEkC,UAAW1B,KAAKW,SAAUc,MAhDjCJ,IAAA,aAAAC,MAAA,WAqDFtB,KAAKK,SAASsB,GAAG,QAAS3B,KAAK4B,KAAKC,KAAK7B,OACzCA,KAAKM,MAAMqB,GAAG,QAAS3B,KAAK8B,eAAeD,KAAK7B,UAtD9CqB,IAAA,iBAAAC,MAAA,SA0DWS,GACb,OAA8B,IAA1B/B,KAAKF,QAAQe,WAIbkB,EAAEC,QAAUvC,IACdO,KAAKiC,SACE,OAjEPZ,IAAA,cAAAC,MAAA,WAwEF,mBAAoBtB,KAAKS,+BAxEvBY,IAAA,OAAAC,MAAA,SA4ECS,GAAG,IAAAG,EAAAlC,KAEN+B,EAAEI,iBAEFnC,KAAKM,MAAM8B,OAAOpC,KAAKQ,YAEvBR,KAAKQ,WAAW6B,KAAKrC,KAAKF,QAAQiB,UAElCuB,WAAW,WAELJ,EAAKpC,QAAQqB,SACfe,EAAK5B,MAAM8B,OAAOF,EAAK3B,UAGzB2B,EAAK1B,WAAW+B,SAAS,UArFZ,QALblB,IAAA,QAAAC,MAAA,WAgGI,IAAAkB,EAAAxC,KAENA,KAAKQ,WAAWiC,YAAY,SAE5BH,WAAW,WACTE,EAAKhC,WAAWkC,UAhGH,KAmGX1C,KAAKF,QAAQqB,SACfnB,KAAKO,SAASmC,aAzGd9C,EAAA,GAgHNJ,EAAEmD,GAAGC,QAAU,SAAU9C,GACvB,OAAOE,KAAK6C,KAAK,WACC,IAAIjD,EAAQJ,EAAEQ,MAAOF,GAC7BgD,UAnHd,CAyHGC","sourcesContent":["/*\n * Theater.js\n * Copyright (c) 2018 Mattonit\n * https://github.com/mattonit/theater\n * Licensed under MIT License\n */\n\n(($) => {\n\n  const KEY_ESC   = 27;\n  const KEY_LEFT  = 37;\n  const KEY_RIGHT = 39;\n  const DELAY_TIME = 300;\n\n  class Theater {\n\n    constructor(element, options) {\n\n      this.keyCodes = {\n        esc: KEY_ESC,\n        left: KEY_LEFT,\n        right: KEY_RIGHT\n      };\n\n      this.$element = $(element);\n      this.options = options;\n\n      this.$body = $('body');\n      this.$overlay = $('<div class=\"theater-overlay\"></div>');\n      this.$container = $('<div class=\"theater-container\"></div>');\n\n      this.src = $(this.$element[0]).attr('href');\n\n      this.defaults = {\n        loop: false,\n        keyboard: true,\n        arrows: true,\n        template:\n        `${this.renderMedia()}`,\n        slideshow: true,\n        closeOnClick: true,\n        overlay: true\n      };\n\n    }\n\n    init() {\n\n      this.options = this.assignOptions(this.options);\n      this.bindEvents();\n\n    }\n\n    assignOptions(newOptions) {\n\n      return $.extend({}, this.defaults, newOptions);\n    }\n\n    bindEvents() {\n\n      this.$element.on('click', this.show.bind(this));\n      this.$body.on('keyup', this.handleKeyboard.bind(this));\n\n    }\n\n    handleKeyboard(e) {\n      if (this.options.keyboard === false) {\n        return true;\n      }\n\n      if (e.which === KEY_ESC) {\n        this.close();\n        return false;\n      }\n\n      return true;\n    }\n\n    renderMedia() {\n      return `<img src=\"${this.src}\" class=\"img-fluid\" />`;\n\n    }\n\n    show(e) {\n\n      e.preventDefault();\n\n      this.$body.append(this.$container);\n\n      this.$container.html(this.options.template);\n\n      setTimeout(() => {\n\n        if (this.options.overlay) {\n          this.$body.append(this.$overlay);\n        }\n\n        this.$container.addClass('shown');\n\n      }, DELAY_TIME);\n\n    }\n\n    close() {\n\n      this.$container.removeClass('shown');\n\n      setTimeout(() => {\n        this.$container.remove();\n      }, DELAY_TIME);\n\n      if (this.options.overlay) {\n        this.$overlay.remove();\n      }\n\n    }\n\n  }\n\n  $.fn.theater = function (options) {\n    return this.each(function () {\n      const theater = new Theater($(this), options);\n      theater.init();\n\n    });\n\n  };\n\n})(jQuery);\n"]}