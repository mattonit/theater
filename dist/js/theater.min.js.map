{"version":3,"sources":["../../js/theater.js"],"names":["$","KEY_ESC","KEY_LEFT","KEY_RIGHT","Theater","element","options","_classCallCheck","this","keyCodes","esc","left","right","$element","$body","$overlay","$container","src","attr","defaults","loop","keyboard","arrows","template","concat","renderMedia","slideshow","closeOnClick","overlay","_createClass","key","value","assignOptions","bindEvents","newOptions","extend","on","show","bind","handleKeyboard","close","e","which","_this","preventDefault","append","html","setTimeout","addClass","_this2","console","log","removeClass","remove","fn","theater","each","init","jQuery"],"mappings":"oZAOA,SAAEA,GAEA,IAAMC,EAAY,GACZC,EAAY,GACZC,EAAY,GAGZC,EAPA,WASJ,SAAAA,EAAYC,EAASC,GAASC,gBAAAC,KAAAJ,GAE5BI,KAAKC,UACHC,IAAKT,EACLU,KAAMT,EACNU,MAAOT,GAGTK,KAAKK,SAAWb,EAAEK,GAClBG,KAAKF,QAAUA,EAEfE,KAAKM,MAAQd,EAAE,QACfQ,KAAKO,SAAWf,EAAE,uCAClBQ,KAAKQ,WAAahB,EAAE,yCAEpBQ,KAAKS,IAAMjB,EAAEQ,KAAKK,SAAS,IAAIK,KAAK,QAEpCV,KAAKW,UACHC,MAAM,EACNC,UAAU,EACVC,QAAQ,EACRC,SAAQ,GAAAC,OACLhB,KAAKiB,eACRC,WAAW,EACXC,cAAc,EACdC,SAAS,GAlCT,OAAAC,aAAAzB,IAAA0B,IAAA,OAAAC,MAAA,WAyCFvB,KAAKF,QAAUE,KAAKwB,cAAcxB,KAAKF,SACvCE,KAAKyB,gBA1CHH,IAAA,gBAAAC,MAAA,SA8CUG,GAEZ,OAAOlC,EAAEmC,UAAW3B,KAAKW,SAAUe,MAhDjCJ,IAAA,aAAAC,MAAA,WAqDFvB,KAAKK,SAASuB,GAAG,QAAS5B,KAAK6B,KAAKC,KAAK9B,OACzCA,KAAKM,MAAMsB,GAAG,QAAS5B,KAAK+B,eAAeD,KAAK9B,OAE7CA,KAAKF,QAAQqB,cACdnB,KAAKO,SAASqB,GAAG,QAAS5B,KAAKgC,MAAMF,KAAK9B,UAzD1CsB,IAAA,iBAAAC,MAAA,SA+DWU,GACb,OAA8B,IAA1BjC,KAAKF,QAAQe,WAIboB,EAAEC,QAAUzC,IACdO,KAAKgC,SACE,OAtEPV,IAAA,cAAAC,MAAA,WA6EF,MAAA,aAAAP,OAAoBhB,KAAKS,IAAzB,6BA7EEa,IAAA,OAAAC,MAAA,SAiFCU,GAAG,IAAAE,EAAAnC,KAENiC,EAAEG,iBAEFpC,KAAKM,MAAM+B,OAAOrC,KAAKQ,YAEvBR,KAAKQ,WAAW8B,KAAKtC,KAAKF,QAAQiB,UAElCwB,WAAW,WAELJ,EAAKrC,QAAQsB,SACfe,EAAK7B,MAAM+B,OAAOF,EAAK5B,UAGzB4B,EAAK3B,WAAWgC,SAAS,UA1FZ,QALblB,IAAA,QAAAC,MAAA,SAqGEU,GAAG,IAAAQ,EAAAzC,KAEP0C,QAAQC,IAAI3C,KAAKQ,YAEjBR,KAAKQ,WAAWoC,YAAY,SAE5BL,WAAW,WACTE,EAAKjC,WAAWqC,UAvGH,KA0GX7C,KAAKF,QAAQsB,SACfpB,KAAKO,SAASsC,aAhHdjD,EAAA,GAuHNJ,EAAEsD,GAAGC,QAAU,SAAUjD,GACvB,OAAOE,KAAKgD,KAAK,WACC,IAAIpD,EAAQJ,EAAEQ,MAAOF,GAC7BmD,UA1Hd,CAgIGC","sourcesContent":["/*\n * Theater.js\n * Copyright (c) 2018 Mattonit\n * https://github.com/mattonit/theater\n * Licensed under MIT License\n */\n\n(($) => {\n\n  const KEY_ESC   = 27;\n  const KEY_LEFT  = 37;\n  const KEY_RIGHT = 39;\n  const DELAY_TIME = 300;\n\n  class Theater {\n\n    constructor(element, options) {\n\n      this.keyCodes = {\n        esc: KEY_ESC,\n        left: KEY_LEFT,\n        right: KEY_RIGHT\n      };\n\n      this.$element = $(element);\n      this.options = options;\n\n      this.$body = $('body');\n      this.$overlay = $('<div class=\"theater-overlay\"></div>');\n      this.$container = $('<div class=\"theater-container\"></div>');\n\n      this.src = $(this.$element[0]).attr('href');\n\n      this.defaults = {\n        loop: false,\n        keyboard: true,\n        arrows: true,\n        template:\n        `${this.renderMedia()}`,\n        slideshow: true,\n        closeOnClick: true,\n        overlay: true\n      };\n\n    }\n\n    init() {\n\n      this.options = this.assignOptions(this.options);\n      this.bindEvents();\n\n    }\n\n    assignOptions(newOptions) {\n\n      return $.extend({}, this.defaults, newOptions);\n    }\n\n    bindEvents() {\n\n      this.$element.on('click', this.show.bind(this));\n      this.$body.on('keyup', this.handleKeyboard.bind(this));\n\n      if(this.options.closeOnClick) {\n        this.$overlay.on('click', this.close.bind(this));\n      }\n\n\n    }\n\n    handleKeyboard(e) {\n      if (this.options.keyboard === false) {\n        return true;\n      }\n\n      if (e.which === KEY_ESC) {\n        this.close();\n        return false;\n      }\n\n      return true;\n    }\n\n    renderMedia() {\n      return `<img src=\"${this.src}\" class=\"img-fluid\" />`;\n\n    }\n\n    show(e) {\n\n      e.preventDefault();\n\n      this.$body.append(this.$container);\n\n      this.$container.html(this.options.template);\n\n      setTimeout(() => {\n\n        if (this.options.overlay) {\n          this.$body.append(this.$overlay);\n        }\n\n        this.$container.addClass('shown');\n\n      }, DELAY_TIME);\n\n    }\n\n    close(e) {\n\n      console.log(this.$container);\n\n      this.$container.removeClass('shown');\n\n      setTimeout(() => {\n        this.$container.remove();\n      }, DELAY_TIME);\n\n      if (this.options.overlay) {\n        this.$overlay.remove();\n      }\n\n    }\n\n  }\n\n  $.fn.theater = function (options) {\n    return this.each(function () {\n      const theater = new Theater($(this), options);\n      theater.init();\n\n    });\n\n  };\n\n})(jQuery);\n"]}